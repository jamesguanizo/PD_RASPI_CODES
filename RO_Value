import spidev
import time

# Constants
RL = 20.0  # Load resistance in kOhms
VOLTAGE_REF = 5.0  # Reference voltage for MCP3008
ADC_RESOLUTION = 1023.0  # ADC resolution (10-bit)
CLEAN_AIR_RS_RO_RATIO = 3.6  # Typical Rs/Ro ratio in clean air for MQ sensors

# SPI configuration
spi = spidev.SpiDev()
spi.open(0, 0)  # Open SPI bus 0, device 0
spi.max_speed_hz = 1350000

# Function to read from MCP3008
def read_adc(channel):
    if channel < 0 or channel > 7:
        return -1
    adc = spi.xfer2([1, (8 + channel) << 4, 0])
    data = ((adc[1] & 3) << 8) + adc[2]
    return data

# Function to calculate Ro
def calculate_ro(raw_adc, RL):
    VRL = (raw_adc / ADC_RESOLUTION) * VOLTAGE_REF  # Convert ADC value to voltage
    if VRL == 0:  # Avoid division by zero
        return None
    RS = ((VOLTAGE_REF * RL) / VRL) - RL  # Calculate sensor resistance
    RO = RS / CLEAN_AIR_RS_RO_RATIO  # Calculate Ro based on clean air ratio
    return RO

# Main loop to calculate Ro
try:
    print("Expose the sensor to clean air for calibration...")
    time.sleep(10)  # Give the sensor time to stabilize in clean air

    raw_value = read_adc(0)  # Read raw ADC value from MQ sensor (channel 0)
    ro_value = calculate_ro(raw_value, RL)

    if ro_value:
        print(f"Calibrated Ro value: {ro_value:.2f} kÎ©")
    else:
        print("Error: VRL is 0, check sensor connections.")

except KeyboardInterrupt:
    print("Calibration interrupted.")

finally:
    spi.close()
